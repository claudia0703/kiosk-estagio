{"version":3,"sources":["styles.js","components/Logo.js","screens/HomeScreen.js","constants.js","actions.js","Store.js","screens/ChooseScreen.js","screens/OrderScreen.js","screens/ReviewScreen.js","screens/SelectPaymentScreen.js","screens/PaymentScreen.js","screens/CompleteOrderScreen.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","height","display","flexDirection","navy","backgroundColor","purple","color","main","flex","overflow","center","justifyContent","alignItems","textAlign","orange","largeLogo","logo","cards","card","margin","space","padding","media","width","largeButton","largeInput","fontSize","bordered","borderWidth","borderRadius","borderstyle","row","Logo","props","styles","src","alt","className","large","HomeScreen","useState","Date","date","setDate","useEffect","timer","setInterval","clearInterval","Card","CardActionArea","onClick","history","push","Box","Typography","gutterBottom","component","variant","toLocaleTimeString","ORDER_SET_TYPE","CATEGORY_LIST_REQUEST","CATEGORY_LIST_SUCCESS","CATEGORY_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","ORDER_ADD_ITEM","ORDER_REMOVE_ITEM","ORDER_CLEAR","ORDER_SET_PAYMENT_TYPE","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","listCategories","dispatch","a","type","Axios","get","data","payload","message","listProducts","categoryName","addToOrder","item","RemoveFromOrder","clearOrder","setPaymentType","paymentType","createOrder","order","post","Store","createContext","initialState","categoryList","loading","productList","orderType","orderItems","orderCreate","reducer","state","action","categories","error","products","existItem","find","x","name","map","itemsCount","reduce","c","quantity","itemsPrice","price","taxPrice","Math","round","totalPrice","filter","newOrder","StoreProvider","useReducer","value","Provider","children","ChooseScreen","useContext","chooseHandler","setOrderType","Fade","in","CardMedia","image","CardContent","OrderScreen","setCategoryName","setQuantity","isOpen","setIsOpen","product","setProduct","loadingProducts","errorProducts","Dialog","maxWidth","fullWidth","open","onClose","DialogTitle","Button","disabled","e","TextField","inputProps","InputProts","bar","largeNummber","min","around","size","Grid","container","md","List","CircularProgress","Alert","severity","ListItem","button","category","Avatar","title","spacing","cardFooter","calorie","length","classname","ReviewScreen","column","orderItem","between","SelectPaymentScreen","selectHandler","PaymentScreen","titles","CompleteOrderScreen","number","createMuiTheme","typography","h1","fontWeight","h2","h3","palette","primary","secondary","contrastText","App","ThemeProvider","CssBaseline","Container","Paper","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"yUAEaA,EAAYC,aAAW,SAACC,GAAD,gBAEhCC,KAAM,CACFC,OAAQ,QACRC,QAAS,OACTC,cAAe,UAGfC,KAAM,CACFC,gBAAiB,WAErBC,OAAQ,CACJD,gBAAiB,UACjBE,MAAM,WAGVC,KAAM,CACFC,KAAM,EACNC,SAAS,OACTP,cAAc,SACdD,QAAQ,OACRK,MAAM,WAGVI,OAAQ,CACJT,QAAQ,OACRU,eAAe,SACfC,WAAW,SACXC,UAAU,UAGdC,OAAQ,CACRV,gBAAgB,WAGhBW,UAAU,CACNf,OAAO,KAEXgB,KAAK,CACDhB,OAAO,IAGXiB,MAAO,CACPhB,QAAS,OACTU,eAAgB,SAChBC,WAAY,UAGZM,KAAK,CAACC,OAAO,IAEbC,MAAM,CACFC,QAAQ,IAIZC,MAAO,CAACC,MAAO,KAEfC,YAAY,CACRD,MAAM,KAGVE,WAAY,CACRF,MAAM,iBACNF,QAAS,cACTK,SAAU,iBACVb,UAAW,oBAEfc,SAAS,CACLC,YAAY,EACZC,aAAc,EACdV,OAAO,EACPW,YAAa,SAEjBC,IAAK,CACD9B,QAAQ,OACRoB,QAAQ,KA3EgB,sBA6ErB,CACHA,QAAQ,KA9EgB,uBAgFrB,CACHV,eAAgB,iBAjFQ,wBAmFpB,CACJA,eAAgB,kBApFQ,uBAsFrB,CAACT,cAAe,WAtFK,K,OCCrB,SAAS8B,EAAKC,GACzB,IAAMC,EAAQtC,IACd,OACE,qBACAuC,IAAI,mBACHC,IAAI,aACJC,UAAWJ,EAAMK,MAAMJ,EAAOnB,UAAWmB,EAAOlB,OCHxC,SAASuB,EAAWN,GAC/B,IAAMC,EAAQtC,IACV,EAAkB4C,mBAAS,IAAIC,MAAnC,mBAAKC,EAAL,KAAWC,EAAX,KAUA,OARCC,qBAAU,WACR,IAAIC,EAAQC,aAAY,kBAAMH,EAAQ,IAAIF,QAAS,KACnD,OAAO,WACHM,cAAcF,OAMjB,cAACG,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAgBC,QAAS,kBAAKjB,EAAMkB,QAAQC,KAAK,YAAjD,SAEI,eAACC,EAAA,EAAD,CAAKhB,UAAW,CAACH,EAAOnC,KAAMmC,EAAO7B,QAArC,UACA,cAACgD,EAAA,EAAD,CAAKhB,UAAW,CAACH,EAAOxB,QAAxB,SACA,eAAC4C,EAAA,EAAD,CAAYC,cAAY,EAAEC,UAAU,KAAKC,QAAQ,KAAjD,2BACuBf,EAAKgB,0BAIxB,eAACL,EAAA,EAAD,CAAKhB,UAAW,CAACH,EAAO3B,KAAM2B,EAAOxB,QAArC,UAEI,cAAC4C,EAAA,EAAD,CAAYE,UAAU,KAAKC,QAAQ,KAAnC,yBAGA,eAACH,EAAA,EAAD,CAAYE,UAAU,KAAKC,QAAQ,KAAnC,mBACU,uBADV,UACuB,uBADvB,WAGA,cAAC,IAAD,CAAc/B,SAAS,UACvB,yBAIJ,eAAC2B,EAAA,EAAD,CAAKhB,UAAW,CAACH,EAAOxB,OAAQwB,EAAOpB,QAAvC,UACI,cAACkB,EAAD,CAAMM,OAAK,IACX,cAACgB,EAAA,EAAD,CAAYE,UAAU,KAAKC,QAAQ,KAAnC,sC,yFC5CXE,EAAe,iBACfC,EAAsB,wBACtBC,EAAsB,uBACtBC,EAAmB,qBAEnBC,EAAqB,uBACrBC,EAAqB,sBACrBC,EAAkB,oBAElBC,EAAe,iBACfC,EAAkB,oBAClBC,EAAY,cAEZC,EAAyB,yBAEzBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBCPpBC,EAAc,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DAC1BD,EAAS,CAACE,KAAMhB,IADU,kBAGFiB,IAAMC,IAAI,mBAHR,uBAGhBC,EAHgB,EAGhBA,KAHgB,kBAIfL,EAAS,CACZE,KAAMf,EACNmB,QAASD,KANS,yDAYfL,EAAS,CACZE,KAAMd,EACNkB,QAAS,KAAMC,WAdG,yDAAH,sDAoBdC,EAAY,uCAAG,WAAOR,GAAP,+BAAAC,EAAA,6DAAiBQ,EAAjB,+BAA+B,GACvDT,EAAS,CAACE,KAAMb,IADQ,kBAGAc,IAAMC,IAAN,iCAAoCK,IAHpC,uBAGbJ,EAHa,EAGbA,KAHa,kBAIbL,EAAS,CACZE,KAAMZ,EACNgB,QAASD,KANO,2DAUZL,EAAS,CACZE,KAAKX,EACLe,QAAS,KAAMC,WAZA,0DAAH,sDAkBZG,EAAU,uCAAE,WAAMV,EAAUW,GAAhB,SAAAV,EAAA,+EACdD,EAAS,CACZE,KAAMV,EACNc,QAASK,KAHQ,2CAAF,wDAQVC,EAAe,uCAAE,WAAMZ,EAAUW,GAAhB,SAAAV,EAAA,+EACnBD,EAAS,CACZE,KAAMT,EACNa,QAASK,KAHa,2CAAF,wDAQfE,EAAU,uCAAG,WAAOb,GAAP,SAAAC,EAAA,+EAEfD,EAAS,CAEZE,KAAMR,KAJY,2CAAH,sDASVoB,EAAc,uCAAE,WAAOd,EAAUe,GAAjB,SAAAd,EAAA,+EAClBD,EAAS,CACZE,KAAMP,EACNW,QAASS,KAHY,2CAAF,wDAOdC,GAAW,uCAAE,WAAMhB,EAASiB,GAAf,iBAAAhB,EAAA,6DACtBD,EAAS,CAACE,KAAMN,IADM,kBAIAO,IAAMe,KAAK,cAAeD,GAJ1B,gBAIbZ,EAJa,EAIbA,KACPL,EAAS,CACLE,KAAML,EACNS,QAASD,IAEbL,EAAS,CACLE,KAAKR,IAVW,kDAcpBM,EAAS,CACLE,KAAKJ,EACLQ,QAAS,KAAMC,UAhBC,0DAAF,wD,iBC5EXY,GAAOC,0BAEdC,GAAa,CACfC,aAAa,CAAEC,SAAQ,GACvBC,YAAY,CAACD,SAAQ,GACrBN,MAAO,CACHQ,UAAW,SACXC,WAAY,GACZX,YAAa,YAEjBY,YAAY,CAACJ,SAAQ,IAGzB,SAASK,GAAQC,EAAOC,GAEpB,OAAOA,EAAO5B,MAEV,KAAKhB,EACD,oCAAU2C,GAAV,IAAiBP,aAAc,CAACC,SAAQ,KAE5C,KAAKpC,EACD,oCACO0C,GADP,IAEIP,aAAa,CAACC,SAAQ,EAAOQ,WAAYD,EAAOxB,WAEpD,KAAKlB,EACL,oCACOyC,GADP,IAEIP,aAAa,CAACC,SAAQ,EAAOS,MAAOF,EAAOxB,WAK/C,KAAKjB,EACD,oCAAUwC,GAAV,IAAiBL,YAAa,CAACD,SAAQ,KAE3C,KAAKjC,EACD,oCACOuC,GADP,IAEIL,YAAY,CAACD,SAAQ,EAAOU,SAAUH,EAAOxB,WAEjD,KAAKf,EACL,oCACOsC,GADP,IAEIL,YAAY,CAACD,SAAQ,EAAOS,MAAOF,EAAOxB,WAG9C,KAAKrB,EACT,oCACO4C,GADP,IAEIZ,MAAM,6BAAIY,EAAMZ,OAAX,IAAkBQ,UAAWK,EAAOxB,YAG7C,KAAKX,EACD,oCACOkC,GADP,IAEIZ,MAAM,6BAAKY,EAAMZ,OAAZ,IAAmBF,YAAae,EAAOxB,YAGpD,KAAKd,EACD,IAAMmB,EAAMmB,EAAOxB,QACb4B,EAAYL,EAAMZ,MAAMS,WAAWS,MACzC,SAACC,GAAD,OAAMA,EAAEC,OAAS1B,EAAK0B,QAIhBX,EAAWQ,EACfL,EAAMZ,MAAMS,WAAWY,KAAI,SAACF,GAAD,OAC7BA,EAAEC,OAASH,EAAUG,KAAO1B,EAAOyB,KAFT,uBAIpBP,EAAMZ,MAAMS,YAJQ,CAIIf,IAExB4B,EAAab,EAAWc,QAAO,SAACvC,EAAGwC,GAAJ,OAAUxC,EAAIwC,EAAEC,WAAU,GACzDC,EAAajB,EAAWc,QAC1B,SAACvC,EAAGwC,GAAJ,OAASxC,EAAGwC,EAAEC,SAAWD,EAAEG,QAC3B,GAGMC,EAAWC,KAAKC,MAAM,IAAKJ,EAAW,KAAK,IAC3CK,EAAYF,KAAKC,MAA+B,KAAvBJ,EAAaE,IAAe,IAE/D,oCACOhB,GADP,IAEIZ,MAAM,6BACCY,EAAMZ,OADR,IAEDS,aACAmB,WACAG,aACAT,iBAIZ,KAAK9C,EACD,IAAMiC,EAAaG,EAAMZ,MAAMS,WAAWuB,QACtC,SAACb,GAAD,OAAOA,EAAEC,OAAQP,EAAOxB,QAAQ+B,QAE9BE,EAAab,EAAWc,QAAO,SAACvC,EAAGwC,GAAJ,OAAUxC,EAAIwC,EAAEC,WAAU,GACzDC,EAAajB,EAAWc,QAC1B,SAACvC,EAAGwC,GAAJ,OAASxC,EAAGwC,EAAEC,SAAWD,EAAEG,QAC3B,GAGMC,EAAWC,KAAKC,MAAM,IAAKJ,EAAW,KAAK,IAC3CK,EAAYF,KAAKC,MAA+B,KAAvBJ,EAAaE,IAAe,IAC/D,oCACOhB,GADP,IAEIZ,MAAM,6BACCY,EAAMZ,OADR,IAEDS,aACAmB,WACAG,aACAT,iBAIZ,KAAK7C,EACD,OAAO,6BACAmC,GADP,IAEIZ,MAAM,CACFS,WAAW,GACXmB,SAAU,EACVG,WAAW,EACXT,WAAW,KAGvB,KAAK3C,EACD,oCAAWiC,GAAX,IAAiBF,YAAY,CAACJ,SAAQ,KAC1C,KAAK1B,EACD,oCACOgC,GADP,IAEIF,YAAY,CAACJ,SAAQ,EAAO2B,SAAUpB,EAAOxB,WAEjD,KAAKR,EACD,oCACO+B,GADP,IAEIF,YAAY,CAACJ,SAAQ,EAAMS,MAAOF,EAAOxB,WAErD,QACA,OAAOuB,GAIZ,SAASsB,GAAc5F,GAC1B,MAAyB6F,qBAAWxB,GAASP,IAA7C,mBACMgC,EAAM,CAACxB,MADb,KACoB7B,SADpB,MAGA,OAAO,cAACmB,GAAMmC,SAAP,CAAgBD,MAAOA,EAAvB,SAA+B9F,EAAMgG,WC/IjC,SAASC,GAAajG,GACjC,IAAMC,EAAQtC,IACX8E,EAAUyD,qBAAWtC,IAArBnB,SAGD0D,EAAc,SAACjC,IFTO,SAACzB,EAAUyB,GAC5BzB,EAAS,CACZE,KAAMjB,EACNqB,QAASmB,IEObkC,CAAa3D,EAAUyB,GACvBlE,EAAMkB,QAAQC,KAAK,WAGnB,OACI,cAACkF,EAAA,EAAD,CAAMC,IAAI,EAAV,SACI,cAAClF,EAAA,EAAD,CAAKhB,UAAW,CAACH,EAAOnC,KAAMmC,EAAO7B,QAArC,SACG,eAACgD,EAAA,EAAD,CAAKhB,UAAW,CAACH,EAAO3B,KAAM2B,EAAOxB,QAArC,UACH,cAACsB,EAAD,CAAMM,OAAK,IACX,cAACgB,EAAA,EAAD,CAAYG,QAAQ,KACjBD,UAAU,KACVnB,UAAWH,EAAOxB,OAClB6C,cAAY,EAHf,6CAMG,eAACF,EAAA,EAAD,CAAKhB,UAAWH,EAAOjB,MAAvB,UACH,cAAC+B,EAAA,EAAD,CAAMX,UAAW,CAACH,EAAOhB,KAAMgB,EAAOd,OAAtC,SACA,eAAC6B,EAAA,EAAD,CAAgBC,QAAS,kBAAKkF,EAAc,WAA5C,UACI,cAACI,EAAA,EAAD,CACIhF,UAAU,MACVpB,IAAI,SACJqG,MAAM,oBACNpG,UAAWH,EAAOZ,QAEtB,eAACoH,EAAA,EAAD,WACA,cAACpF,EAAA,EAAD,CACIC,cAAY,EACZE,QAAQ,KACRnD,MAAM,cACNkD,UAAU,MALd,iBAYJ,cAACR,EAAA,EAAD,CAAMX,UAAW,CAACH,EAAOhB,KAAMgB,EAAOd,OAAtC,SACA,eAAC6B,EAAA,EAAD,CAAgBC,QAAS,kBAAKkF,EAAc,aAA5C,UACI,cAACI,EAAA,EAAD,CACIhF,UAAU,MACVpB,IAAI,YACJqG,MAAM,uBACNpG,UAAWH,EAAOZ,QAEtB,eAACoH,EAAA,EAAD,WACA,cAACpF,EAAA,EAAD,CACIC,cAAY,EACZE,QAAQ,KACRnD,MAAM,cACNkD,UAAU,MALd,8B,gJC9CD,SAASmF,GAAY1G,GAChC,MAAyBkG,qBAAWtC,IAA7BU,EAAP,EAAOA,MAAO7B,EAAd,EAAcA,SAGRxC,EAAQtC,IACd,EAAwC4C,mBAAS,IAAjD,mBAAO2C,EAAP,KAAqByD,EAArB,KACA,EAAgCpG,mBAAS,GAAzC,mBAAO4E,EAAP,KAAiByB,EAAjB,KACA,EAA0BrG,oBAAS,GAAnC,mBAAOsG,EAAP,KAAeC,EAAf,KACA,EAA4BvG,mBAAS,IAArC,mBAAOwG,EAAP,KAAgBC,EAAhB,KAqBA,EAAoC1C,EAAMP,aAAnCS,EAAP,EAAOA,WAAYR,EAAnB,EAAmBA,QAASS,EAA5B,EAA4BA,MAC5B,EAIIH,EAAML,YAHNS,EADJ,EACIA,SACSuC,EAFb,EAEIjD,QACOkD,EAHX,EAGIzC,MAGJ,EAMIH,EAAMZ,MALNS,EADJ,EACIA,WACAa,EAFJ,EAEIA,WACAS,EAHJ,EAGIA,WACAH,EAJJ,EAIIA,SACApB,EALJ,EAKIA,UAGJvD,qBAAU,WACF6D,EAGAvB,EAAaR,EAAUS,GAFvBV,EAAeC,KAKpB,CAACA,EAAU+B,EAAYtB,IAY1B,OACG,eAAC9B,EAAA,EAAD,CAAKhB,UAAWH,EAAOnC,KAAvB,UACG,eAACqJ,GAAA,EAAD,CACAC,SAAS,KACTC,WAAW,EACXC,KAAMT,EACNU,QA3Dc,WAChBT,GAAU,IAsDR,UAOI,eAACU,GAAA,EAAD,CAAapH,UAAWH,EAAOxB,OAA/B,iBACWsI,EAAQjC,QAEnB,eAAC1D,EAAA,EAAD,CAAKhB,UAAW,CAACH,EAAOH,IAAKG,EAAOxB,QAApC,UACE,cAACgJ,GAAA,EAAD,CACAjG,QAAQ,YACRnD,MAAM,UACNqJ,SAAuB,IAAbvC,EACVlE,QAAS,SAAC0G,GAAD,OAAOxC,EAAW,GAAKyB,EAAYzB,EAAW,IAJvD,SAOA,cAAC,KAAD,MAEA,cAACyC,GAAA,EAAD,CACIC,WAAY,CAACzH,UAAUH,EAAQT,YAC/BsI,WAAY,CACZC,KAAI,EACJF,WAAY,CACRzH,UAAWH,EAAOT,aAKtBY,UAAWH,EAAO+H,aAClBrF,KAAK,SACLnB,QAAQ,SACRyG,IAAK,EACLnC,MAAOX,IAEH,cAACsC,GAAA,EAAD,CACRjG,QAAQ,YACRnD,MAAM,UACN4C,QAAS,SAAC0G,GAAD,OAAOf,EAAYzB,EAAW,IAH/B,SAMR,cAAC,KAAD,SAIF,eAAC/D,EAAA,EAAD,CAAKhB,UAAW,CAACH,EAAOH,IAAKG,EAAOiI,QAApC,UACM,cAACT,GAAA,EAAD,CACIxG,QA1FW,WAC3BoC,EAAgBZ,EAAUsE,GAC1BD,GAAU,IAyFMtF,QAAQ,YACRnD,MAAM,UACN8J,KAAK,QACL/H,UAAWH,EAAOV,YALtB,SAOS4E,EAAWS,MAAK,SAACC,GAAD,OAAOA,EAAEC,OAASiC,EAAQjC,QACzC,oBACA,WAGV,cAAC2C,GAAA,EAAD,CACCxG,QA1GQ,WACrBkC,EAAWV,EAAD,aAAC,gBAAcsE,GAAf,IAAwB5B,cAClC2B,GAAU,IAyGGtF,QAAQ,YACRnD,MAAM,UACN8J,KAAK,QACL/H,UAAWH,EAAOV,YALnB,gCAWR,cAAC6B,EAAA,EAAD,CAAKhB,UAAWH,EAAO3B,KAAvB,SACI,eAAC8J,GAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,GAAA,EAAD,CAAMhF,MAAI,EAACkF,GAAI,EAAf,SACI,cAACC,GAAA,EAAD,UACEvE,EACM,cAACwE,GAAA,EAAD,IACH/D,EACG,cAACgE,GAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyBjE,IAE7B,qCACA,cAACkE,GAAA,EAAD,CAAUC,QAAM,EAAhB,SACI,cAAC7I,EAAD,MAEHyE,EAAWO,KAAI,SAAC8D,GAAD,OACZ,cAACF,GAAA,EAAD,CAAUC,QAAM,EAChB3H,QAAS,kBAjGP6D,EAiGiC+D,EAAS/D,KAhGpE6B,EAAgB7B,QAChB7B,EAAaR,EAAUS,GAFE,IAAC4B,GAgGF,SAGI,cAACgE,GAAA,EAAD,CAAQ3I,IAAK0I,EAAS/D,KAAM5E,IAAK2I,EAASrC,SAHxBqC,EAAS/D,gBAU3C,eAACsD,GAAA,EAAD,CAAMhF,MAAI,EAACkF,GAAI,GAAf,UACI,cAACjH,EAAA,EAAD,CACIC,cAAY,EACZlB,UAAWH,EAAO8I,MAClBvH,QAAQ,KACRD,UAAU,KAJd,SAMS2B,GAAgB,cAEzB,cAACkF,GAAA,EAAD,CAAMC,WAAS,EAACW,QAAS,EAAzB,SACK/B,EACG,cAACuB,GAAA,EAAD,IACItB,EACA,cAACuB,GAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyBxB,IAEzBxC,EAASK,KAAI,SAACgC,GAAD,OACT,cAACqB,GAAA,EAAD,CAAMhF,MAAI,EAACkF,GAAI,EAAf,SACI,eAACvH,EAAA,EAAD,CACAX,UAAWH,EAAOhB,KAClBgC,QAAS,kBAnK7C+F,EAmKwED,QAlKxED,GAAU,IAgK0B,UAKA,cAAC9F,EAAA,EAAD,UACI,cAACuF,EAAA,EAAD,CACAhF,UAAU,MACVpB,IAAK4G,EAAQjC,KACb0B,MAAOO,EAAQP,MACfpG,UAAWH,EAAOZ,UAMtB,eAACoH,EAAA,EAAD,WACI,cAACpF,EAAA,EAAD,CACAC,cAAY,EACZE,QAAQ,QACRnD,MAAM,cACNkD,UAAU,IAJV,SAMKwF,EAAQjC,OAGb,eAAC1D,EAAA,EAAD,CAAKhB,UAAWH,EAAOgJ,WAAvB,UACA,eAAC5H,EAAA,EAAD,CACAG,QAAQ,QACRnD,MAAM,gBACNkD,UAAU,IAHV,UAKKwF,EAAQmC,QALb,UAOA,eAAC7H,EAAA,EAAD,CACAG,QAAQ,QACRnD,MAAM,cACNkD,UAAU,IAHV,cAKMwF,EAAQ1B,MALd,oCAmBpC,cAACjE,EAAA,EAAD,UACI,eAACA,EAAA,EAAD,WACI,eAACA,EAAA,EAAD,CAAKhB,UAAW,CAACH,EAAOP,SAAUO,EAAOd,OAAzC,wBACgB+E,EADhB,YACoCoB,EADpC,cACyDG,EADzD,UAEYT,KAGZ,eAAC5D,EAAA,EAAD,CAAKhB,UAAW,CAACH,EAAOH,IAAKG,EAAOiI,QAApC,UACI,cAACT,GAAA,EAAD,CACAxG,QAAS,WACTqC,EAAWb,GACXzC,EAAMkB,QAAQC,KAAK,MAEvBK,QAAQ,YACRnD,MAAM,UACN+B,UAAWH,EAAOV,YAPd,0BAcA,cAACkI,GAAA,EAAD,CACAxG,QAjMQ,WACxBjB,EAAMkB,QAAQC,KAAd,YAiMgBK,QAAQ,YACRnD,MAAM,UACNqJ,SAA8B,IAApBvD,EAAWgF,OACrBC,UAAWnJ,EAAOV,YALlB,6BC7PT,SAAS8J,GAAarJ,GACjC,MAAyBkG,qBAAYtC,IAA9BU,EAAP,EAAOA,MAAO7B,EAAd,EAAcA,SAEf,EAMC6B,EAAMZ,MALNS,EADD,EACCA,WACAa,EAFD,EAECA,WACAS,EAHD,EAGCA,WACAH,EAJD,EAICA,SACApB,EALD,EAKCA,UAEMjE,EAAQtC,IACd,EAA2B4C,oBAAS,GAApC,mBAAOsG,EAAP,KAAeC,EAAf,KACA,EAA6BvG,mBAAS,IAAtC,mBAAOwG,EAAP,KAAgBC,EAAhB,KACA,EAA+BzG,mBAAS,GAAxC,mBAAO4E,EAAP,KAAiByB,EAAjB,KAoBA,OACE,eAACxF,EAAA,EAAD,CAAKhB,UAAW,CAACH,EAAOnC,MAAxB,UACM,eAACsD,EAAA,EAAD,CAAKhB,UAAW,CAACH,EAAO3B,KAAM2B,EAAO7B,OAAQ6B,EAAOxB,QAApD,UACA,eAAC0I,GAAA,EAAD,CACFC,SAAS,KACTC,WAAW,EACXC,KAAMT,EACNU,QA1Bc,WAChBT,GAAU,IAqBN,UAOE,eAACU,GAAA,EAAD,CAAapH,UAAWH,EAAOxB,OAA/B,iBACWsI,EAAQjC,QAEnB,eAAC1D,EAAA,EAAD,CAAKhB,UAAW,CAACH,EAAOH,IAAKG,EAAOxB,QAApC,UACE,cAACgJ,GAAA,EAAD,CACAjG,QAAQ,YACRnD,MAAM,UACNqJ,SAAuB,IAAbvC,EACVlE,QAAS,SAAC0G,GAAD,OAAOxC,EAAW,GAAKyB,EAAYzB,EAAW,IAJvD,SAOA,cAAC,KAAD,MAEA,cAACyC,GAAA,EAAD,CACIC,WAAY,CAACzH,UAAUH,EAAQT,YAC/BsI,WAAY,CACZC,KAAI,EACJF,WAAY,CACRzH,UAAWH,EAAOT,aAKtBY,UAAWH,EAAO+H,aAClBrF,KAAK,SACLnB,QAAQ,SACRyG,IAAK,EACLnC,MAAOX,IAEH,cAACsC,GAAA,EAAD,CACRjG,QAAQ,YACRnD,MAAM,UACN4C,QAAS,SAAC0G,GAAD,OAAOf,EAAYzB,EAAW,IAH/B,SAMR,cAAC,KAAD,SAIF,eAAC/D,EAAA,EAAD,CAAKhB,UAAW,CAACH,EAAOH,IAAKG,EAAOiI,QAApC,UACM,cAACT,GAAA,EAAD,CACIxG,QA1DW,WAC3BoC,EAAgBZ,EAAUsE,GAC1BD,GAAU,IAyDMtF,QAAQ,YACRnD,MAAM,UACN8J,KAAK,QACL/H,UAAWH,EAAOV,YALtB,SAOS4E,EAAWS,MAAK,SAACC,GAAD,OAAOA,EAAEC,OAASiC,EAAQjC,QACzC,oBACA,WAGV,cAAC2C,GAAA,EAAD,CACCxG,QA1EQ,WACrBkC,EAAWV,EAAD,aAAC,gBAAcsE,GAAf,IAAwB5B,cAClC2B,GAAU,IAyEGtF,QAAQ,YACRnD,MAAM,UACN8J,KAAK,QACL/H,UAAWH,EAAOV,YALnB,gCAWV,eAAC6B,EAAA,EAAD,CAAKhB,UAAW,CAACH,EAAOxB,OAAQwB,EAAOqJ,QAAvC,UACI,cAACvJ,EAAD,CAAMM,OAAK,IACX,eAACgB,EAAA,EAAD,CACIC,cAAY,EACZlB,UAAWH,EAAO8I,MAClBvH,QAAQ,KACRD,UAAU,KAJd,uBAMmB2C,EANnB,eASJ,cAACkE,GAAA,EAAD,CAAMC,WAAS,EAAf,SACKlE,EAAWY,KAAI,SAACwE,GAAD,OAChB,cAACnB,GAAA,EAAD,CAAMhF,MAAI,EAACkF,GAAI,GAAf,SACI,cAACvH,EAAA,EAAD,CACIX,UAAWH,EAAOhB,KAClBgC,QAAS,kBAvGvB+F,EAuGiDuC,QAtGjDzC,GAAU,IAoGA,SAIQ,cAAC9F,EAAA,EAAD,UACI,eAACyF,EAAA,EAAD,WACI,eAACrF,EAAA,EAAD,CAAKhB,UAAW,CAACH,EAAOH,IAAKG,EAAOuJ,SAApC,UACE,cAACnI,EAAA,EAAD,CACAC,cAAY,EACZE,QAAQ,QACRnD,MAAM,cACNkD,UAAU,IAJV,SAMKgI,EAAUzE,OAEf,cAAC2C,GAAA,EAAD,CAAQjG,QAAQ,YAAhB,qBAEF,eAACJ,EAAA,EAAD,CAAKhB,UAAW,CAACH,EAAOH,IAAKG,EAAOuJ,SAApC,UACA,eAACnI,EAAA,EAAD,CAEEG,QAAQ,QACRnD,MAAM,gBACNkD,UAAU,IAJZ,UAMOgI,EAAUL,QANjB,UASE,eAAC7H,EAAA,EAAD,CAEAG,QAAQ,QACRnD,MAAM,gBACNkD,UAAU,IAJV,UAMKgI,EAAUpE,SANf,OAM6BoE,EAAUlE,oBAlCrCkE,EAAUzE,cA+CpC,eAAC1D,EAAA,EAAD,WACI,eAACA,EAAA,EAAD,CAAKhB,UAAW,CAACH,EAAOP,SAASO,EAAOd,OAAxC,wBACwB,YAAZ+E,EAAwB,WAAa,SADjD,UAEEoB,EAFF,cAEuBG,EAFvB,aAE6CT,KAE7C,eAAC5D,EAAA,EAAD,CAAKhB,UAAW,CAACH,EAAOH,IAAKG,EAAOiI,QAApC,UACI,cAACT,GAAA,EAAD,CACAxG,QAAS,WACLjB,EAAMkB,QAAQC,KAAd,WAEJK,QAAQ,YACRnD,MAAM,UACN+B,UAAWH,EAAOV,YANlB,kBAUA,cAACkI,GAAA,EAAD,CACAxG,QAzJe,WAC3BjB,EAAMkB,QAAQC,KAAK,oBAyJPK,QAAQ,YACRnD,MAAM,YACNqJ,SAA8B,IAApBvD,EAAWgF,OACrB/I,UAAWH,EAAOV,YALlB,0CCxLL,SAASkK,GAAoBzJ,GAExC,IAAOyC,EAAWyD,qBAAYtC,IAAvBnB,SACDxC,EAAStC,IAET+L,EAAc,SAAClG,GACjBD,EAAed,EAAUe,GACN,aAAfA,EACAxD,EAAMkB,QAAQC,KAAK,YAGfnB,EAAMkB,QAAQC,KAAK,cAK/B,OACE,cAACC,EAAA,EAAD,CAAKhB,UAAW,CAACH,EAAOnC,KAAMmC,EAAO7B,QAArC,SACG,eAACgD,EAAA,EAAD,CAAKhB,UAAW,CAACH,EAAO3B,KAAM2B,EAAOxB,QAArC,UACA,cAACsB,EAAD,CAAMM,OAAK,IACX,cAACgB,EAAA,EAAD,CACAjB,UAAWH,EAAOxB,OAClB6C,cAAY,EACZE,QAAQ,KACRD,UAAU,KAJV,mCASA,eAACH,EAAA,EAAD,CAAKhB,UAAWH,EAAOjB,MAAvB,UACA,cAAC+B,EAAA,EAAD,CAAMX,UAAW,CAACH,EAAOhB,KAAMgB,EAAOd,OAAtC,SACA,eAAC6B,EAAA,EAAD,CAAgBC,QAAS,kBAAMyI,EAAc,aAA7C,UACG,cAACnD,EAAA,EAAD,CACAhF,UAAU,MACVpB,IAAI,WACJqG,MAAM,sBACNpG,UAAWH,EAAOZ,QAElB,cAACoH,EAAA,EAAD,UACI,cAACpF,EAAA,EAAD,CACAC,cAAY,EACZE,QAAQ,KACRnD,MAAM,cACNkD,UAAU,IAJV,6BAWR,cAACR,EAAA,EAAD,CAAMX,UAAW,CAACH,EAAOhB,KAAMgB,EAAOd,OAAtC,SACC,eAAC6B,EAAA,EAAD,CAAgBC,QAAS,kBAAMyI,EAAc,eAA7C,UACG,cAACnD,EAAA,EAAD,CACAhF,UAAU,MACVpB,IAAI,aACJqG,MAAM,wBACNpG,UAAWH,EAAOZ,QAElB,cAACoH,EAAA,EAAD,UACI,cAACpF,EAAA,EAAD,CACAC,cAAY,EACZE,QAAQ,KACRnD,MAAM,cACNkD,UAAU,IAJV,uCC7DD,SAASoI,GAAc3J,GAElC,IAAMC,EAAStC,IAEf,OACI,eAACyD,EAAA,EAAD,CAAKhB,UAAW,CAACH,EAAOnC,KAAMmC,EAAO7B,QAArC,UACE,cAACgD,EAAA,EAAD,CAAKhB,UAAW,CAACH,EAAO3B,KAAM2B,EAAOxB,QAArC,SAEA,eAAC2C,EAAA,EAAD,WACA,cAACrB,EAAD,CAAMM,OAAK,IACX,cAACgB,EAAA,EAAD,CAEDC,cAAY,EACZlB,UAAWH,EAAO2J,OAClBpI,QAAQ,KACRD,UAAU,KALT,4DASD,cAACiH,GAAA,EAAD,SAIC,cAACpH,EAAA,EAAD,CAAKhB,UAAW,CAACH,EAAOxB,OAAQwB,EAAOd,OAAvC,SACA,cAACsI,GAAA,EAAD,CACAxG,QAAS,kBAAMjB,EAAMkB,QAAQC,KAAK,cAClCK,QAAQ,YACRnD,MAAM,UACN+B,UAAWH,EAAOV,YAJlB,iCCrBK,SAASsK,GAAoB7J,GACxC,IAAMC,EAAStC,IACf,EAAwBuI,qBAAWtC,IAA5BU,EAAP,EAAOA,MAAO7B,EAAd,EAAcA,SACPiB,EAAOY,EAAPZ,MACP,EAAiCY,EAAMF,YAAhCJ,EAAP,EAAOA,QAASS,EAAhB,EAAgBA,MAAOkB,EAAvB,EAAuBA,SAUvB,OARDhF,qBAAU,WACN+C,EAAMS,WAAWgF,OAAO,GACvB1F,GAAYhB,EAASiB,KAEvB,CAACA,IAII,eAACtC,EAAA,EAAD,CAAKhB,UAAW,CAACH,EAAOnC,KAAMmC,EAAO7B,QAArC,UACC,cAACgD,EAAA,EAAD,CAAKhB,UAAW,CAACH,EAAO3B,KAAM2B,EAAOxB,QAArC,SACI,eAAC2C,EAAA,EAAD,WACI,cAACrB,EAAD,CAAMM,OAAK,IACV2D,EACD,cAACwE,GAAA,EAAD,IACG/D,EACC,cAACgE,GAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyBjE,IAEzB,qCACA,cAACpD,EAAA,EAAD,CACAC,cAAY,EACZlB,UAAWH,EAAO8I,MAClBvH,QAAQ,KACRD,UAAU,KAJV,yCASA,cAACF,EAAA,EAAD,CACAC,cAAY,EACZlB,UAAWH,EAAO8I,MAClBvH,QAAQ,KACRD,UAAU,KAJV,wBASA,eAACF,EAAA,EAAD,CACAC,cAAY,EACZlB,UAAWH,EAAO8I,MAClBvH,QAAQ,KACRD,UAAU,KAJV,kCAO0BoE,EAASmE,kBAQ3C,cAAC1I,EAAA,EAAD,CAAKhB,UAAW,CAACH,EAAOxB,OAAQwB,EAAOd,OAAvC,SACA,cAACsI,GAAA,EAAD,CACAxG,QAAS,kBAAMjB,EAAMkB,QAAQC,KAAK,MAClCK,QAAQ,YACRnD,MAAM,UACN+B,UAAWH,EAAOV,YAJlB,8BCtDhB,IAAM1B,GAAQkM,YAAe,CAC3BC,WAAY,CACVC,GAAI,CAACC,WAAY,QAEjBC,GAAI,CACF1K,SAAU,OACVpB,MAAO,SAGT+L,GAAI,CACF3K,SAAU,SACVyK,WAAY,OACZ7L,MAAO,UAKXgM,QAAQ,CACNC,QAAQ,CAAChM,KAAM,WACfiM,UAAU,CACRjM,KAAK,UACLkM,aAAa,cA8BJC,OAvBf,WACE,OACE,cAAC,IAAD,UACD,eAACC,EAAA,EAAD,CAAe7M,MAAOA,GAAtB,UACE,cAAC8M,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAWxD,SAAS,KAApB,SACE,eAACyD,EAAA,EAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIvJ,UAAWjB,EAAYyK,OAAO,IAC9C,cAAC,IAAD,CAAOD,KAAK,UAAUvJ,UAAW0E,GAAc8E,OAAO,IACtD,cAAC,IAAD,CAAOD,KAAK,SAASvJ,UAAWmF,GAAaqE,OAAO,IACpD,cAAC,IAAD,CAAOD,KAAK,UAAUvJ,UAAW8H,GAAc0B,OAAO,IACtD,cAAC,IAAD,CAAOD,KAAK,kBAAkBvJ,UAAWkI,GAAqBsB,OAAK,IACnE,cAAC,IAAD,CAAOD,KAAK,WAAWvJ,UAAWoI,GAAeoB,OAAK,IACtD,cAAC,IAAD,CAAOD,KAAK,YAAYvJ,UAAWsI,GAAqBkB,OAAK,eCzCvDC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC9F,GAAD,UACE,cAAC,GAAD,MAEF+F,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.9b26a1cd.chunk.js","sourcesContent":["import {makeStyles} from '@material-ui/core';\r\n\r\nexport const useStyles = makeStyles((theme)=> ({\r\n   \r\n    root: {\r\n        height: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        },\r\n        \r\n        navy: {\r\n            backgroundColor: '#003080',\r\n        },\r\n        purple: {\r\n            backgroundColor: '#800080',\r\n            color:'#ffffff',\r\n        },\r\n        \r\n        main: {\r\n            flex: 1,\r\n            overflow:'auto',\r\n            flexDirection:'column',\r\n            display:'flex',\r\n            color:'#ffffff',\r\n        },\r\n        \r\n        center: {\r\n            display:'flex',\r\n            justifyContent:'center',\r\n            alignItems:'center',\r\n            textAlign:'center',\r\n        },\r\n        \r\n        orange: {\r\n        backgroundColor:'#e68a00',\r\n        },\r\n        \r\n        largeLogo:{ \r\n            height:100,\r\n        },\r\n        logo:{ \r\n            height:50,\r\n        },\r\n        \r\n        cards: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        },\r\n        \r\n        card:{margin:10},\r\n        \r\n        space:{\r\n            padding:10,\r\n        \r\n        },\r\n        \r\n        media: {width: 200},\r\n\r\n        largeButton:{\r\n            width:250,\r\n        },\r\n\r\n        largeInput: {\r\n            width:'60px!important',\r\n            padding: '0!important',\r\n            fontSize: '35px!important',\r\n            textAlign: 'center!important',\r\n        },\r\n        bordered:{\r\n            borderWidth:2,\r\n            borderRadius: 5,\r\n            margin:5,\r\n            borderstyle: 'solid',\r\n        },\r\n        row: {\r\n            display:'flex',\r\n            padding:10,\r\n        },\r\n        space: {\r\n            padding:10,\r\n        },\r\n        around:{\r\n            justifyContent: 'space-around',\r\n        },\r\n        between:{\r\n            justifyContent: 'space-between',\r\n        },\r\n        column:{flexDirection: 'column'},\r\n\r\n        \r\n        }));","import React from 'react'\r\nimport {useStyles} from '../styles';\r\n\r\nexport default function Logo(props) {\r\n    const styles= useStyles();\r\n    return (\r\n      <img \r\n      src=\"/images/logo.png\"\r\n       alt=\"Food order\" \r\n       className={props.large?styles.largeLogo: styles.logo}\r\n\r\n       ></img>\r\n    );\r\n}\r\n","import { Box, Card, CardActionArea, Typography } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport TouchAppIcon from '@material-ui/icons/TouchApp';\r\nimport {useStyles} from '../styles';\r\nimport Logo from '../components/Logo';\r\n\r\nexport default function HomeScreen(props) {\r\n    const styles= useStyles();\r\n    var [date, setDate] = useState(new Date())\r\n    \r\n     useEffect(() => {\r\n       var timer = setInterval(() => setDate(new Date()), 1000)\r\n       return function cleanup() {\r\n           clearInterval(timer)\r\n       }});\r\n    \r\n\r\n\r\n    return (\r\n        <Card>\r\n            <CardActionArea onClick={()=> props.history.push('/choose')}>\r\n\r\n                <Box className={[styles.root, styles.purple]}>\r\n                <Box className={[styles.center]}>\r\n                <Typography gutterBottom  component=\"h6\" variant=\"h6\">\r\n                        Current time: {date.toLocaleTimeString()}\r\n                        </Typography>\r\n                </Box>\r\n               \r\n                    <Box className={[styles.main, styles.center]}>\r\n                    \r\n                        <Typography component=\"h6\" variant=\"h6\">\r\n                        Fast & Easy\r\n                        </Typography>\r\n                        <Typography component=\"h1\" variant=\"h1\">\r\n                            Order <br /> & pay <br /> here\r\n                        </Typography>\r\n                        <TouchAppIcon fontSize=\"large\"></TouchAppIcon>\r\n                        <p></p>\r\n                        \r\n\r\n                    </Box>\r\n                    <Box className={[styles.center, styles.orange]}>\r\n                        <Logo large></Logo>\r\n                        <Typography component=\"h5\" variant=\"h5\">\r\n                            Touch to Start\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n            </CardActionArea>\r\n        </Card>\r\n    )\r\n}\r\n\r\n","export const ORDER_SET_TYPE='ORDER_SET_TYPE';\r\nexport const CATEGORY_LIST_REQUEST='CATEGORY_LIST_REQUEST';\r\nexport const CATEGORY_LIST_SUCCESS='CATEGORY_LIST_SUCESS';\r\nexport const CATEGORY_LIST_FAIL='CATEGORY_LIST_FAIL';\r\n\r\nexport const PRODUCT_LIST_REQUEST='PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS='PRODUCT_LIST_SUCESS';\r\nexport const PRODUCT_LIST_FAIL='PRODUCT_LIST_FAIL';\r\n\r\nexport const ORDER_ADD_ITEM='ORDER_ADD_ITEM';\r\nexport const ORDER_REMOVE_ITEM='ORDER_REMOVE_ITEM';\r\nexport const ORDER_CLEAR='ORDER_CLEAR';\r\n\r\nexport const ORDER_SET_PAYMENT_TYPE = 'ORDER_SET_PAYMENT_TYPE';\r\n\r\nexport const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';","import Axios from 'axios';\r\nimport { ORDER_SET_TYPE, CATEGORY_LIST_REQUEST, CATEGORY_LIST_FAIL, CATEGORY_LIST_SUCCESS, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, ORDER_ADD_ITEM, ORDER_REMOVE_ITEM, ORDER_CLEAR, ORDER_SET_PAYMENT_TYPE, ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS } from \"./constants\"\r\n\r\nexport const setOrderType = (dispatch, orderType)=> {\r\n    return dispatch({\r\n        type: ORDER_SET_TYPE,\r\n        payload: orderType,\r\n    });\r\n};\r\n\r\nexport const listCategories = async (dispatch) => {\r\n    dispatch({type: CATEGORY_LIST_REQUEST});\r\n    try{\r\n        const{data} = await Axios.get('/api/categories');\r\n        return dispatch({\r\n            type: CATEGORY_LIST_SUCCESS,\r\n            payload: data,\r\n\r\n        });\r\n\r\n    }\r\n    catch (error){\r\n        return dispatch({\r\n            type: CATEGORY_LIST_FAIL,\r\n            payload: error.message,\r\n\r\n        });\r\n    }\r\n};\r\n\r\nexport const listProducts = async (dispatch, categoryName= '') => {\r\n    dispatch({type: PRODUCT_LIST_REQUEST});\r\n    try{\r\n        const {data}= await Axios.get(`/api/products?category=${categoryName}`);\r\n        return dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data,\r\n      \r\n    });\r\n     }catch(error){\r\n         return dispatch({\r\n             type:PRODUCT_LIST_FAIL,\r\n             payload: error.message,\r\n         });\r\n\r\n    }\r\n};\r\n\r\nexport const addToOrder =async(dispatch, item)=> {\r\n    return dispatch({\r\n        type: ORDER_ADD_ITEM,\r\n        payload: item,\r\n\r\n    });\r\n};\r\n\r\nexport const RemoveFromOrder =async(dispatch, item)=> {\r\n    return dispatch({\r\n        type: ORDER_REMOVE_ITEM,\r\n        payload: item,\r\n\r\n    });\r\n};\r\n\r\nexport const clearOrder = async (dispatch) => {\r\n\r\n    return dispatch({\r\n\r\n        type: ORDER_CLEAR,\r\n    });\r\n\r\n};\r\n\r\nexport const setPaymentType= async (dispatch, paymentType) => {\r\n    return dispatch({\r\n        type: ORDER_SET_PAYMENT_TYPE,\r\n        payload: paymentType,\r\n    });\r\n};\r\n\r\nexport const createOrder= async(dispatch,order) => {\r\n    dispatch({type: ORDER_CREATE_REQUEST});\r\n\r\n    try{\r\n      const {data}= await Axios.post('/api/orders', order);\r\n      dispatch({\r\n          type: ORDER_CREATE_SUCCESS,\r\n          payload: data,\r\n      });\r\n      dispatch({\r\n          type:ORDER_CLEAR,\r\n      });\r\n\r\n    } catch(error) {\r\n      dispatch({\r\n          type:ORDER_CREATE_FAIL,\r\n          payload: error.message,\r\n      });\r\n    }\r\n}","import React, {createContext, useReducer} from 'react';\r\nimport { CATEGORY_LIST_FAIL, CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS, ORDER_ADD_ITEM, ORDER_CLEAR, ORDER_REMOVE_ITEM, ORDER_SET_PAYMENT_TYPE, ORDER_SET_TYPE, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL } from './constants';\r\n\r\n\r\nexport const Store= createContext();\r\n\r\nconst initialState={\r\n    categoryList:{ loading:true },\r\n    productList:{loading:true},\r\n    order: {\r\n        orderType: 'Eat in',\r\n        orderItems: [],\r\n        paymentType: 'Pay here',\r\n    },\r\n    orderCreate:{loading:true},\r\n};\r\n\r\nfunction reducer(state, action){\r\n\r\n    switch(action.type){\r\n\r\n        case CATEGORY_LIST_REQUEST:\r\n            return{...state, categoryList: {loading:true}};\r\n\r\n        case CATEGORY_LIST_SUCCESS:\r\n            return{\r\n                ...state,\r\n                categoryList:{loading:false, categories: action.payload},\r\n            }\r\n            case CATEGORY_LIST_FAIL:\r\n            return{\r\n                ...state,\r\n                categoryList:{loading:false, error: action.payload},\r\n            }\r\n\r\n        \r\n\r\n            case PRODUCT_LIST_REQUEST:\r\n                return{...state, productList: {loading:true}};\r\n    \r\n            case PRODUCT_LIST_SUCCESS:\r\n                return{\r\n                    ...state,\r\n                    productList:{loading:false, products: action.payload},\r\n                }\r\n                case PRODUCT_LIST_FAIL:\r\n                return{\r\n                    ...state,\r\n                    productList:{loading:false, error: action.payload},\r\n                }\r\n\r\n                case ORDER_SET_TYPE:\r\n            return{\r\n                ...state, \r\n                order:{...state.order, orderType: action.payload},\r\n            }\r\n\r\n            case ORDER_SET_PAYMENT_TYPE:\r\n                return{\r\n                    ...state,\r\n                    order: {...state.order, paymentType: action.payload},\r\n                }\r\n\r\n            case ORDER_ADD_ITEM:{\r\n                const item= action.payload;\r\n                const existItem = state.order.orderItems.find(\r\n                (x)=> x.name === item.name\r\n\r\n                );\r\n\r\n                const orderItems=existItem\r\n                ? state.order.orderItems.map((x) =>\r\n                x.name === existItem.name ? item : x\r\n                )\r\n                : [...state.order.orderItems, item];\r\n\r\n                const itemsCount = orderItems.reduce((a, c) => a + c.quantity, 0);\r\n                const itemsPrice = orderItems.reduce(\r\n                    (a, c)=> a+ c.quantity * c.price,\r\n                    0\r\n\r\n                );\r\n                    const taxPrice = Math.round(0.15*itemsPrice*100)/100\r\n                    const totalPrice= Math.round ((itemsPrice + taxPrice)*100)/100;\r\n\r\n                return{\r\n                    ...state,\r\n                    order:{\r\n                        ...state.order,\r\n                        orderItems,\r\n                        taxPrice,\r\n                        totalPrice,\r\n                        itemsCount,\r\n                    },\r\n                };\r\n            }\r\n            case ORDER_REMOVE_ITEM: {\r\n                const orderItems = state.order.orderItems.filter(\r\n                    (x) => x.name!== action.payload.name\r\n                );\r\n                const itemsCount = orderItems.reduce((a, c) => a + c.quantity, 0);\r\n                const itemsPrice = orderItems.reduce(\r\n                    (a, c)=> a+ c.quantity * c.price,\r\n                    0\r\n\r\n                );\r\n                    const taxPrice = Math.round(0.15*itemsPrice*100)/100\r\n                    const totalPrice= Math.round ((itemsPrice + taxPrice)*100)/100;\r\n                return{\r\n                    ...state,\r\n                    order:{\r\n                        ...state.order,\r\n                        orderItems,\r\n                        taxPrice,\r\n                        totalPrice,\r\n                        itemsCount,\r\n                    },\r\n                };\r\n            }\r\n            case ORDER_CLEAR:\r\n                return {\r\n                    ...state,\r\n                    order:{\r\n                        orderItems:[],\r\n                        taxPrice: 0,\r\n                        totalPrice:0,\r\n                        itemsCount:0,\r\n                },\r\n            };\r\n            case ORDER_CREATE_REQUEST:\r\n                return{ ...state,orderCreate:{loading:true}};\r\n            case ORDER_CREATE_SUCCESS:\r\n                return{\r\n                    ...state,\r\n                    orderCreate:{loading:false, newOrder: action.payload},\r\n                };\r\n                case ORDER_CREATE_FAIL:\r\n                    return{\r\n                        ...state,\r\n                        orderCreate:{loading:false,error: action.payload},\r\n                    };\r\n            default: \r\n            return state;\r\n    }\r\n\r\n}\r\nexport function StoreProvider(props){\r\n    const [state, dispatch]= useReducer(reducer, initialState);\r\n    const value={state, dispatch};\r\n\r\n    return <Store.Provider value={value}>{props.children}</Store.Provider>\r\n}","import { Box, Card, CardActionArea, CardContent, CardMedia, Fade, Typography } from '@material-ui/core'\r\nimport React, { useContext } from 'react'\r\nimport { setOrderType } from '../actions';\r\nimport Logo from '../components/Logo';\r\nimport {useStyles} from '../styles';\r\nimport { Store } from '../Store';\r\n\r\nexport default function ChooseScreen(props) {\r\n    const styles= useStyles();\r\nconst {dispatch}=useContext(Store);\r\n\r\n\r\nconst chooseHandler=(orderType)=>{\r\n    setOrderType(dispatch, orderType);\r\n    props.history.push('/order');\r\n}\r\n\r\n    return (\r\n        <Fade in={true}>\r\n            <Box className={[styles.root, styles.purple]}>\r\n               <Box className={[styles.main, styles.center]}>\r\n            <Logo large></Logo>\r\n            <Typography variant=\"h3\"\r\n               component=\"h3\" \r\n               className={styles.center} \r\n               gutterBottom> \r\n               Where will you be eating today?\r\n               </Typography>\r\n               <Box className={styles.cards}>\r\n            <Card className={[styles.card, styles.space]}>\r\n            <CardActionArea onClick={()=> chooseHandler('Eat In')}>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    alt=\"Eat in\"\r\n                    image=\"/images/eatin.png\"\r\n                    className={styles.media}\r\n                />\r\n                <CardContent>\r\n                <Typography\r\n                    gutterBottom\r\n                    variant=\"h4\"\r\n                    color=\"textPrimary\"\r\n                    component=\"p\"\r\n                />\r\n                Eat In\r\n                </CardContent>\r\n            </CardActionArea>\r\n            </Card>\r\n\r\n            <Card className={[styles.card, styles.space]}>\r\n            <CardActionArea onClick={()=> chooseHandler('Take Out')}>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    alt=\"Take Away\"\r\n                    image=\"/images/takeaway.png\"\r\n                    className={styles.media}\r\n                />\r\n                <CardContent>\r\n                <Typography\r\n                    gutterBottom\r\n                    variant=\"h4\"\r\n                    color=\"textPrimary\"\r\n                    component=\"p\"\r\n                />\r\n                Take Away\r\n                </CardContent>\r\n            </CardActionArea>\r\n            </Card>\r\n               </Box>\r\n            \r\n               </Box>\r\n            </Box>\r\n        </Fade>\r\n    );\r\n}\r\n","import { Avatar, Box, Button, Card, CardActionArea, CardContent, CardMedia, CircularProgress, Dialog, DialogTitle, Grid, List, ListItem, TextField, Typography } from '@material-ui/core'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { addToOrder, clearOrder, listCategories, listProducts, RemoveFromOrder } from '../actions';\r\nimport { Store } from '../Store';\r\nimport { useStyles } from '../styles';\r\nimport Logo from '../components/Logo';\r\nimport { Alert } from '@material-ui/lab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport createTypography from '@material-ui/core/styles/createTypography';\r\n\r\nexport default function OrderScreen(props) {\r\n    const {state, dispatch}= useContext(Store);\r\n \r\n    \r\n    const styles= useStyles();\r\n    const [categoryName, setCategoryName] = useState('');\r\n    const [quantity, setQuantity] = useState(1);\r\n    const [isOpen, setIsOpen]=useState(false);\r\n    const [product, setProduct]=useState({});\r\n \r\n    const closeHandler= () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const productClickHandler = (p) => {\r\n        setProduct (p);\r\n        setIsOpen(true);\r\n    };\r\n\r\n    const addToOrderHandler= () => {\r\n        addToOrder(dispatch, {...product, quantity});\r\n        setIsOpen(false);\r\n    };\r\n    const cancelOrRemoveFromOrder= () => {\r\n        RemoveFromOrder(dispatch, product);\r\n        setIsOpen(false);\r\n    };\r\n\r\n    \r\n    const {categories, loading, error}= state.categoryList;\r\n    const {\r\n        products,\r\n        loading: loadingProducts,\r\n        error: errorProducts,\r\n    } = state.productList;\r\n\r\n    const {\r\n        orderItems,\r\n        itemsCount,\r\n        totalPrice,\r\n        taxPrice,\r\n        orderType,\r\n    } = state.order;\r\n\r\n    useEffect(() => {\r\n        if(!categories){\r\n            listCategories(dispatch);\r\n        } else{\r\n            listProducts(dispatch, categoryName);\r\n        }\r\n\r\n    }, [dispatch, categories, categoryName]);\r\n    \r\n    const categoryClickHandler = (name)=>{\r\n        setCategoryName(name);\r\n        listProducts(dispatch, categoryName);\r\n    };\r\n\r\n\r\n    const previewOrderHandler = () => {\r\n        props.history.push(`/review`);\r\n    };\r\n    \r\n    return (\r\n       <Box className={styles.root}>\r\n          <Dialog\r\n          maxWidth=\"sm\"\r\n          fullWidth={true}\r\n          open={isOpen}\r\n          onClose={closeHandler}\r\n\r\n          >\r\n              <DialogTitle className={styles.center}>\r\n                    Add {product.name}\r\n              </DialogTitle>\r\n              <Box className={[styles.row, styles.center]}>\r\n                <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={quantity === 1}\r\n                onClick={(e) => quantity > 1 && setQuantity(quantity - 1)}\r\n                >\r\n\r\n                <RemoveIcon/>\r\n                </Button>\r\n                <TextField\r\n                    inputProps={{className:styles. largeInput}}\r\n                    InputProts={{\r\n                    bar:true,\r\n                    inputProps: {\r\n                        className: styles.largeInput,\r\n                    },\r\n\r\n\r\n                    }}\r\n                    className={styles.largeNummber}\r\n                    type=\"number\"\r\n                    variant=\"filled\"\r\n                    min={1}\r\n                    value={quantity}\r\n                    />\r\n                        <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={(e) => setQuantity(quantity + 1)}\r\n                >\r\n\r\n                <AddIcon/>\r\n                </Button>\r\n                \r\n              </Box>\r\n              <Box className={[styles.row, styles.around]}>\r\n                    <Button\r\n                        onClick={cancelOrRemoveFromOrder}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        className={styles.largeButton}\r\n                        >\r\n                            {orderItems.find((x) => x.name === product.name)\r\n                            ? 'Remove from Order'\r\n                            : 'Cancel'}\r\n                    </Button>\r\n\r\n                    <Button\r\n                     onClick={addToOrderHandler}\r\n                     variant=\"contained\"\r\n                     color=\"primary\"\r\n                     size=\"large\"\r\n                     className={styles.largeButton}\r\n                    >\r\n                        Add to Order\r\n                    </Button>\r\n              </Box>\r\n          </Dialog>\r\n            <Box className={styles.main}>\r\n                <Grid container>\r\n                    <Grid item md={2}>\r\n                        <List>\r\n                         {loading ? (\r\n                                <CircularProgress />\r\n                         ) : error ? (\r\n                                <Alert severity=\"error\">{error}</Alert>\r\n                         ) : (\r\n                            <>\r\n                            <ListItem button>\r\n                                <Logo></Logo>\r\n                            </ListItem>\r\n                            {categories.map((category) => (\r\n                                <ListItem button key={category.name}\r\n                                onClick={()=> categoryClickHandler(category.name)}\r\n                                >\r\n                                    <Avatar alt={category.name} src={category.image} />\r\n                                </ListItem>                            \r\n                              ))}\r\n                            </>\r\n                           )}\r\n                        </List>\r\n                    </Grid>\r\n                    <Grid item md={10}>\r\n                        <Typography\r\n                            gutterBottom\r\n                            className={styles.title}\r\n                            variant=\"h2\"\r\n                            component=\"h2\"\r\n                            >\r\n                                {categoryName || 'Main Menu'}\r\n                        </Typography>\r\n                        <Grid container spacing={1}>\r\n                            {loadingProducts ? (\r\n                                <CircularProgress/>\r\n                                ) : errorProducts ? (\r\n                                    <Alert severity=\"error\">{errorProducts}</Alert>\r\n                                ) : (\r\n                                    products.map((product)=>(\r\n                                        <Grid item md={6}>\r\n                                            <Card\r\n                                            className={styles.card}\r\n                                            onClick={() => productClickHandler (product)}\r\n\r\n                                            >\r\n                                            <CardActionArea>\r\n                                                <CardMedia\r\n                                                component=\"img\"\r\n                                                alt={product.name}\r\n                                                image={product.image}\r\n                                                className={styles.media}\r\n                                                \r\n                                                />\r\n                                                    \r\n                                               \r\n                                            </CardActionArea>\r\n                                            <CardContent>\r\n                                                <Typography\r\n                                                gutterBottom\r\n                                                variant=\"body2\"\r\n                                                color=\"textPrimary\"\r\n                                                component=\"p\"\r\n                                                >\r\n                                                    {product.name}\r\n\r\n                                                </Typography>\r\n                                                <Box className={styles.cardFooter}>\r\n                                                <Typography\r\n                                                variant=\"body2\"\r\n                                                color=\"textSecondary\"\r\n                                                component=\"p\"\r\n                                                >\r\n                                                    {product.calorie} Cal \r\n                                                </Typography>\r\n                                                <Typography\r\n                                                variant=\"body2\"\r\n                                                color=\"textPrimary\"\r\n                                                component=\"p\"\r\n                                                >\r\n                                                    ${product.price} Price \r\n                                                </Typography>\r\n                                                </Box>\r\n                                            </CardContent>\r\n                                            </Card>\r\n                                            </Grid>)\r\n                                    ))}\r\n                                \r\n                        </Grid>\r\n                       \r\n                    </Grid>\r\n                </Grid>\r\n              \r\n            </Box>\r\n            <Box>\r\n                <Box>\r\n                    <Box className={[styles.bordered, styles.space]}>\r\n                        My Order - {orderType} | Tax: ${taxPrice} | Total: ${totalPrice}\r\n                        Items: {itemsCount}\r\n\r\n                    </Box>\r\n                    <Box className={[styles.row, styles.around]}>\r\n                        <Button\r\n                        onClick={() => {\r\n                        clearOrder(dispatch);\r\n                        props.history.push('/');\r\n                    }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={styles.largeButton}\r\n                    >\r\n                        Cancel Order\r\n                        \r\n                        \r\n                        \r\n                        </Button>\r\n                        <Button\r\n                        onClick={previewOrderHandler}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={orderItems.length===0}\r\n                        classname={styles.largeButton}\r\n                        >\r\n                            Done\r\n                        \r\n                        \r\n                        \r\n                        \r\n                        </Button>\r\n\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n       </Box>\r\n    )\r\n}\r\n","import { Box, Button, Card, CardActionArea, CardContent, Dialog, DialogTitle, Grid, TextField, Typography } from '@material-ui/core'\r\nimport React, { useContext, useState } from 'react'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport { addToOrder, RemoveFromOrder } from '../actions';\r\nimport { Store, StoreProvider } from '../Store';\r\nimport {useStyles} from '../styles'\r\nimport Logo from '../components/Logo';\r\n\r\nexport default function ReviewScreen(props) {\r\n    const {state, dispatch}= useContext (Store);\r\n \r\n   const {\r\n    orderItems,\r\n    itemsCount,\r\n    totalPrice,\r\n    taxPrice,\r\n    orderType,\r\n} = state.order;\r\n    const styles= useStyles ();\r\n    const [isOpen, setIsOpen]= useState(false);\r\n    const [product, setProduct]= useState({});\r\n    const [quantity, setQuantity]= useState(1);\r\n    const closeHandler= () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const productClickHandler = (p) => {\r\n        setProduct (p);\r\n        setIsOpen(true);\r\n    };\r\n    const addToOrderHandler= () => {\r\n        addToOrder(dispatch, {...product, quantity});\r\n        setIsOpen(false);\r\n    };\r\n    const cancelOrRemoveFromOrder= () => {\r\n        RemoveFromOrder(dispatch, product);\r\n        setIsOpen(false);\r\n    };\r\n    const proceedToCheckoutHandler=() =>{\r\n        props.history.push('/select-payment');\r\n    }\r\n    return (\r\n      <Box className={[styles.root]}>\r\n            <Box className={[styles.main, styles.purple, styles.center]}>\r\n            <Dialog\r\n          maxWidth=\"sm\"\r\n          fullWidth={true}\r\n          open={isOpen}\r\n          onClose={closeHandler}\r\n\r\n          >\r\n              <DialogTitle className={styles.center}>\r\n                    Add {product.name}\r\n              </DialogTitle>\r\n              <Box className={[styles.row, styles.center]}>\r\n                <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={quantity === 1}\r\n                onClick={(e) => quantity > 1 && setQuantity(quantity - 1)}\r\n                >\r\n\r\n                <RemoveIcon/>\r\n                </Button>\r\n                <TextField\r\n                    inputProps={{className:styles. largeInput}}\r\n                    InputProts={{\r\n                    bar:true,\r\n                    inputProps: {\r\n                        className: styles.largeInput,\r\n                    },\r\n\r\n\r\n                    }}\r\n                    className={styles.largeNummber}\r\n                    type=\"number\"\r\n                    variant=\"filled\"\r\n                    min={1}\r\n                    value={quantity}\r\n                    />\r\n                        <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={(e) => setQuantity(quantity + 1)}\r\n                >\r\n\r\n                <AddIcon/>\r\n                </Button>\r\n                \r\n              </Box>\r\n              <Box className={[styles.row, styles.around]}>\r\n                    <Button\r\n                        onClick={cancelOrRemoveFromOrder}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        className={styles.largeButton}\r\n                        >\r\n                            {orderItems.find((x) => x.name === product.name)\r\n                            ? 'Remove from Order'\r\n                            : 'Cancel'}\r\n                    </Button>\r\n\r\n                    <Button\r\n                     onClick={addToOrderHandler}\r\n                     variant=\"contained\"\r\n                     color=\"primary\"\r\n                     size=\"large\"\r\n                     className={styles.largeButton}\r\n                    >\r\n                        Add to Order\r\n                    </Button>\r\n              </Box>\r\n          </Dialog>\r\n          <Box className={[styles.center, styles.column]}>\r\n              <Logo large></Logo>\r\n              <Typography\r\n                  gutterBottom\r\n                  className={styles.title}\r\n                  variant=\"h3\"\r\n                  component=\"h3\"\r\n                  >\r\n                      Review my {orderType} order\r\n              </Typography>\r\n          </Box>\r\n          <Grid container>\r\n              {orderItems.map((orderItem)=> (\r\n              <Grid item md={12} key={orderItem.name}>\r\n                  <Card\r\n                      className={styles.card}\r\n                      onClick={() => productClickHandler(orderItem)}\r\n                      >\r\n                          <CardActionArea>\r\n                              <CardContent>\r\n                                  <Box className={[styles.row, styles.between]}>\r\n                                    <Typography\r\n                                    gutterBottom\r\n                                    variant=\"body2\"\r\n                                    color=\"textPrimary\"\r\n                                    component=\"p\"\r\n                                   >\r\n                                        {orderItem.name}\r\n                                    </Typography>\r\n                                    <Button variant=\"contained\">Edit</Button>\r\n                                  </Box>\r\n                                  <Box className={[styles.row, styles.between]}>\r\n                                  <Typography\r\n                                    \r\n                                    variant=\"body2\"\r\n                                    color=\"textSecondary\"\r\n                                    component=\"p\"\r\n                                   >\r\n                                        {orderItem.calorie} Cal\r\n                                        \r\n                                    </Typography>\r\n                                    <Typography\r\n                                    \r\n                                    variant=\"body2\"\r\n                                    color=\"textSecondary\"\r\n                                    component=\"p\"\r\n                                   >\r\n                                        {orderItem.quantity} x ${orderItem.price}\r\n                                        \r\n                                    </Typography>\r\n                                  </Box>\r\n                              </CardContent>\r\n                          </CardActionArea>\r\n\r\n\r\n                      </Card>\r\n              </Grid>\r\n              ))}\r\n          </Grid>\r\n            </Box>\r\n            <Box>\r\n                <Box className={[styles.bordered,styles.space]}>\r\n                My Order - {orderType==='takeout' ? 'Take out' : 'Eat in'} Tax:\r\n                ${taxPrice} | Total: ${totalPrice} | Items: {itemsCount}\r\n                </Box>\r\n                <Box className={[styles.row, styles.around]}>\r\n                    <Button\r\n                    onClick={() => {\r\n                        props.history.push(`/order`);\r\n                    }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={styles.largeButton}\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                    <Button\r\n                    onClick={proceedToCheckoutHandler}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    disabled={orderItems.length===0}\r\n                    className={styles.largeButton}\r\n                    >\r\n                        Proceed to Checkout\r\n\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n      </Box>\r\n    )\r\n}\r\n","import { Box, Card, CardActionArea, CardContent, CardMedia, Typography } from '@material-ui/core'\r\nimport React, { useContext } from 'react'\r\nimport { setPaymentType } from '../actions';\r\nimport Logo from '../components/Logo';\r\nimport { Store } from '../Store';\r\nimport { useStyles } from '../styles';\r\n\r\nexport default function SelectPaymentScreen(props) {\r\n    \r\n    const {dispatch}= useContext (Store);\r\n    const styles = useStyles();\r\n\r\n    const selectHandler=(paymentType) => {\r\n        setPaymentType(dispatch, paymentType);\r\n        if (paymentType ==='Pay here') {\r\n            props.history.push('/payment');}\r\n\r\n            else{\r\n                props.history.push('/complete');}\r\n            \r\n        \r\n    };\r\n\r\n    return (\r\n      <Box className={[styles.root, styles.purple]}>\r\n         <Box className={[styles.main, styles.center]}>\r\n         <Logo large></Logo>\r\n         <Typography\r\n         className={styles.center}\r\n         gutterBottom\r\n         variant=\"h3\"\r\n         component=\"h3\"\r\n         >\r\n             Select payment method\r\n         </Typography>\r\n      \r\n         <Box className={styles.cards}>\r\n         <Card className={[styles.card, styles.space]}>\r\n         <CardActionArea onClick={() => selectHandler('Pay here')}>\r\n            <CardMedia\r\n            component=\"img\"\r\n            alt=\"Pay here\"\r\n            image=\"/images/payhere.png\"\r\n            className={styles.media}\r\n            />  \r\n            <CardContent>\r\n                <Typography\r\n                gutterBottom\r\n                variant=\"h6\"\r\n                color=\"textPrimary\"\r\n                component=\"p\"\r\n                >\r\n                    Pay here\r\n                </Typography>\r\n            </CardContent>\r\n         </CardActionArea>    \r\n        </Card>\r\n        <Card className={[styles.card, styles.space]}>\r\n         <CardActionArea onClick={() => selectHandler('At counter')}>\r\n            <CardMedia\r\n            component=\"img\"\r\n            alt=\"At counter\"\r\n            image=\"/images/atcounter.png\"\r\n            className={styles.media}\r\n            />  \r\n            <CardContent>\r\n                <Typography\r\n                gutterBottom\r\n                variant=\"h6\"\r\n                color=\"textPrimary\"\r\n                component=\"p\"\r\n                >\r\n                    At counter\r\n                </Typography>\r\n            </CardContent>\r\n         </CardActionArea>    \r\n        </Card>\r\n         </Box>\r\n         </Box>\r\n         </Box>\r\n        \r\n  \r\n        \r\n    )       \r\n       \r\n    \r\n}\r\n","import { Box, Button, CircularProgress, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport Logo from '../components/Logo'\r\nimport { useStyles } from '../styles';\r\n\r\nexport default function PaymentScreen(props) {\r\n    \r\n    const styles = useStyles();\r\n    \r\n    return (\r\n        <Box className={[styles.root, styles.purple]}>\r\n          <Box className={[styles.main, styles.center]}>\r\n\r\n          <Box>\r\n          <Logo large></Logo>\r\n          <Typography\r\n        \r\n         gutterBottom\r\n         className={styles.titles}\r\n         variant=\"h3\"\r\n         component=\"h3\"\r\n         >\r\n             Please follow the instructions on the PIN pad.\r\n         </Typography>\r\n         <CircularProgress />\r\n          \r\n          </Box>\r\n          </Box>\r\n          <Box className={[styles.center, styles.space]}> \r\n          <Button \r\n          onClick={() => props.history.push('/complete')}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={styles.largeButton}\r\n          >\r\n              Complete Order\r\n          </Button>\r\n          </Box>\r\n\r\n        </Box>\r\n    )\r\n}\r\n","import { Box, Button, CircularProgress, Typography } from '@material-ui/core';\r\nimport React, { useContext, useEffect } from 'react'\r\nimport { createOrder } from '../actions';\r\nimport { Store } from '../Store';\r\nimport Logo from '../components/Logo'\r\nimport { useStyles } from '../styles';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nexport default function CompleteOrderScreen(props) {\r\n    const styles = useStyles();\r\n    const {state, dispatch}=useContext(Store);\r\n    const {order}=state;\r\n    const {loading, error, newOrder}=state.orderCreate;\r\n   \r\n   useEffect(()=>{\r\n    if(order.orderItems.length>0){\r\n        createOrder(dispatch,order);\r\n    }\r\n   }, [order]);\r\n   \r\n   \r\n   \r\n    return <Box className={[styles.root, styles.purple]}>\r\n            <Box className={[styles.main, styles.center]}>\r\n                <Box>\r\n                    <Logo large></Logo>\r\n                    {loading ? (\r\n                    <CircularProgress></CircularProgress>\r\n                    ): error ? (\r\n                        <Alert severity=\"error\">{error}</Alert>\r\n                    ) : (\r\n                        <>\r\n                        <Typography\r\n                        gutterBottom\r\n                        className={styles.title}\r\n                        variant=\"h3\"\r\n                        component=\"h3\"\r\n\r\n                        >\r\n                            Your order has been placed.\r\n                        </Typography>\r\n                        <Typography\r\n                        gutterBottom\r\n                        className={styles.title}\r\n                        variant=\"h1\"\r\n                        component=\"h1\"\r\n\r\n                        >\r\n                            Thank you!\r\n                        </Typography>\r\n                        <Typography\r\n                        gutterBottom\r\n                        className={styles.title}\r\n                        variant=\"h3\"\r\n                        component=\"h3\"\r\n\r\n                        >\r\n                            Your order number is {newOrder.number}\r\n                        </Typography>\r\n\r\n                        </>\r\n                    )}\r\n\r\n                </Box>\r\n            </Box>\r\n                <Box className={[styles.center, styles.space]}>\r\n                <Button\r\n                onClick={() => props.history.push('/')}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={styles.largeButton}\r\n                >\r\n                    Order Again\r\n                </Button>\r\n            \r\n                </Box>\r\n\r\n    </Box>\r\n      \r\n    \r\n}\r\n","\nimport './App.css';\nimport { CardContent, Container,createMuiTheme,CssBaseline,Paper,ThemeProvider } from '@material-ui/core';\nimport HomeScreen from './screens/HomeScreen';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport ChooseScreen from './screens/ChooseScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport ReviewScreen from './screens/ReviewScreen';\nimport SelectPaymentScreen from './screens/SelectPaymentScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport CompleteOrderScreen from './screens/CompleteOrderScreen';\n\nconst theme = createMuiTheme({\n  typography: {\n    h1: {fontWeight: 'bold'},\n  \n    h2: {\n      fontSize: '2rem',\n      color: 'black',\n    },\n  \n    h3: {\n      fontSize: '1.8rem',\n      fontWeight: 'bold',\n      color: 'white',\n    },\n  \n  },\n  \n  palette:{\n    primary:{main: '#ff1744' },\n    secondary:{\n      main:'#118e16',\n      contrastText:'#ffffff',\n    },\n  },\n  \n  });\n  \n\nfunction App() {\n  return (\n    <BrowserRouter>\n   <ThemeProvider theme={theme}>\n     <CssBaseline />\n     <Container maxWidth=\"sm\">\n       <Paper>\n         <Route path=\"/\" component={HomeScreen} exact={true}></Route>\n         <Route path=\"/choose\" component={ChooseScreen} exact={true}></Route>\n         <Route path=\"/order\" component={OrderScreen} exact={true}></Route>\n         <Route path=\"/review\" component={ReviewScreen} exact={true}></Route>\n         <Route path=\"/select-payment\" component={SelectPaymentScreen} exact></Route>\n         <Route path=\"/payment\" component={PaymentScreen} exact></Route>\n         <Route path=\"/complete\" component={CompleteOrderScreen} exact></Route>\n\n\n       </Paper>\n     </Container>\n   </ThemeProvider>\n   </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {StoreProvider } from './Store';\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}